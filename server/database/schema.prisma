// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model user {
  id         String      @id @default(dbgenerated("nanoid(5, 'abcdefghijklmnopqrstuvwxyz')")) @db.Char(5)
  email      String?     @unique @db.VarChar(100)
  username   String      @unique @db.VarChar(20)
  nickname   String?     @db.VarChar(20)
  phone      String?     @unique @db.VarChar(20)
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  password   String      @db.VarChar(255)
  user_role  user_role[]
}

model role {
  id          String      @id @default(dbgenerated("nanoid(5, 'abcdefghijklmnopqrstuvwxyz')")) @db.Char(5)
  name        String      @unique @db.VarChar(50)
  description String?     @db.VarChar(255)
  created_at  DateTime    @default(now())
  updated_at  DateTime    @updatedAt
  user_role   user_role[]
  menu_role   menu_role[]
}

model user_role {
  id      String @id @default(dbgenerated("nanoid(5, 'abcdefghijklmnopqrstuvwxyz')")) @db.Char(5)
  user_id String @db.Char(5)
  user    user   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  role_id String @db.Char(5)
  role    role   @relation(fields: [role_id], references: [id])
}

model menu {
  id        String      @id @default(dbgenerated("nanoid(5, 'abcdefghijklmnopqrstuvwxyz')")) @db.Char(5)
  name      String      @unique @db.VarChar(50)
  url       String?     @db.VarChar(255)
  icon      String      @db.VarChar(50)
  create_at DateTime    @default(now())
  update_at DateTime    @updatedAt
  menu_role menu_role[]
  parent_id String?     @db.Char(5)
  parent    menu?       @relation("menu_parent", fields: [parent_id], references: [id])
  children  menu[]      @relation("menu_parent")
}

model menu_role {
  id      String @id @default(dbgenerated("nanoid(5, 'abcdefghijklmnopqrstuvwxyz')")) @db.Char(5)
  menu_id String @db.Char(5)
  menu    menu   @relation(fields: [menu_id], references: [id], onDelete: Cascade)
  role_id String @db.Char(5)
  role    role   @relation(fields: [role_id], references: [id])
}
